name: Release Backend EXE

on:
  push:
    tags:
      - "v*" # e.g. v1.2.3

permissions:
  contents: write # needed to create / upload release
  actions: read

jobs:
  build-and-release:
    name: Build EXE and Publish Release
    runs-on: windows-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if exist requirements.txt (pip install -r requirements.txt) else (echo "No requirements.txt found" && exit /b 1)
          pip install pyinstaller

      - name: Show versions
        run: |
          python --version
          pip list

      - name: Build EXE (PyInstaller spec)
        shell: cmd
        run: |
          if exist dist rd /s /q dist
          if exist build rd /s /q build
          python scripts\build_backend.py --spec
          if not exist dist\AutoSBCBackend.exe (
            echo Build failed: EXE missing
            dir dist
            exit /b 1
          )

      - name: Stamp version into checksum
        id: sums
        shell: bash
        run: |
          SHA256=$(sha256sum dist/AutoSBCBackend.exe | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT

      - name: Upload artifact (CI)
        uses: actions/upload-artifact@v4
        with:
          name: AutoSBCBackend-${{ github.ref_name }}
          path: |
            dist/AutoSBCBackend.exe
            warn-*.txt
          if-no-files-found: ignore
          retention-days: 7

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: AutoSBC Backend ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            AutoSBC Backend release ${{ github.ref_name }}

            SHA256: `${{ steps.sums.outputs.sha256 }}`

            Notes:
            - Built via PyInstaller spec.
            - Run: AutoSBCBackend.exe (binds to port 8000).
            - Set AUTOSBC_ENABLE_FILE_LOGS=1 to re-enable file logging in packaged mode.
          files: |
            dist/AutoSBCBackend.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
